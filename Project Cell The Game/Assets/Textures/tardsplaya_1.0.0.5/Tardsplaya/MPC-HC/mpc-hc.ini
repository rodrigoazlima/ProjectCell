; MPC-HC
[Capture]
AudDispName=
AudOutput=1
AudPreview=1
Country=1
FileFormat=0
FileName=.avi
SepAudio=1
VidDispName=@device:pnp:\\?\usb#vid_13d3&pid_5122&mi_00#7&458bfa4&0&0000#{65e8773d-8f56-11d0-a3b9-00a0c9223196}\global
VidOutput=1
VidPreview=1
[Commands2]
CommandMod0=969 1 0 "" 5 0 0 0
CommandMod1=800 1 0 "" 5 0 0 0
CommandMod10=814 1 0 "" 5 0 0 0
CommandMod100=32782 1 0 "" 5 0 0 0
CommandMod101=32783 1 0 "" 5 0 0 0
CommandMod102=32784 1 0 "" 5 0 0 0
CommandMod103=33405 1 0 "" 5 0 0 0
CommandMod104=33243 1 0 "" 5 0 0 0
CommandMod105=33260 1 0 "" 5 0 0 0
CommandMod106=33246 1 0 "" 5 0 0 0
CommandMod107=33247 1 0 "" 5 0 0 0
CommandMod108=24000 1 0 "" 5 0 0 0
CommandMod109=24001 1 0 "" 5 0 0 0
CommandMod11=816 1 0 "" 5 0 0 0
CommandMod12=889 1 0 "" 5 0 0 0
CommandMod13=887 3 0 "" 5 0 0 0
CommandMod14=888 3 0 "" 5 0 0 0
CommandMod15=890 1 0 "" 5 0 0 0
CommandMod16=891 1 0 "" 5 0 0 0
CommandMod17=892 1 0 "" 5 0 0 0
CommandMod18=893 1 0 "" 5 0 0 0
CommandMod19=895 1 0 "" 5 0 0 0
CommandMod2=801 1 0 "" 5 0 0 0
CommandMod20=894 1 0 "" 5 0 0 0
CommandMod21=896 1 0 "" 5 0 0 0
CommandMod22=905 1 0 "" 5 0 0 0
CommandMod23=906 1 0 "" 5 0 0 0
CommandMod24=902 1 0 "" 5 0 0 0
CommandMod25=901 1 0 "" 5 0 0 0
CommandMod26=898 1 0 "" 5 0 0 0
CommandMod27=897 1 0 "" 5 0 0 0
CommandMod28=996 1 0 "" 5 0 0 0
CommandMod29=922 1 0 "" 5 0 0 0
CommandMod3=802 1 0 "" 5 0 0 0
CommandMod30=921 1 0 "" 5 0 0 0
CommandMod31=920 1 0 "" 5 0 0 0
CommandMod32=919 1 0 "" 5 0 0 0
CommandMod33=974 1 0 "" 5 0 0 0
CommandMod34=975 1 0 "" 5 0 0 0
CommandMod35=817 1 0 "" 5 0 0 0
CommandMod36=818 1 0 "" 5 0 0 0
CommandMod37=819 1 0 "" 5 0 0 0
CommandMod38=820 1 0 "" 5 0 0 0
CommandMod39=821 1 0 "" 5 0 0 0
CommandMod4=976 1 0 "" 5 0 0 0
CommandMod40=822 1 0 "" 5 0 0 0
CommandMod41=823 1 0 "" 5 0 0 0
CommandMod42=824 1 0 "" 5 0 0 0
CommandMod43=825 1 0 "" 5 0 0 0
CommandMod44=826 1 0 "" 5 0 0 0
CommandMod45=827 1 0 "" 5 0 0 0
CommandMod46=828 1 0 "" 5 0 0 0
CommandMod47=829 1 0 "" 5 0 0 0
CommandMod48=830 1 1b "" 5 3 0 3
CommandMod49=831 1 0 "" 5 0 0 0
CommandMod5=806 1 0 "" 5 0 0 0
CommandMod50=832 1 0 "" 5 0 0 0
CommandMod51=833 1 0 "" 5 0 0 0
CommandMod52=834 1 0 "" 5 0 0 0
CommandMod53=968 1 0 "" 5 0 0 0
CommandMod54=4500 1 0 "" 5 0 0 0
CommandMod55=884 1 0 "" 5 0 0 0
CommandMod56=861 1 0 "" 5 0 0 0
CommandMod57=862 1 0 "" 5 0 0 0
CommandMod58=864 1 0 "" 5 0 0 0
CommandMod59=866 1 0 "" 5 0 0 0
CommandMod6=807 1 0 "" 5 0 0 0
CommandMod60=863 1 0 "" 5 0 0 0
CommandMod61=865 1 0 "" 5 0 0 0
CommandMod62=867 1 0 "" 5 0 0 0
CommandMod63=876 1 0 "" 5 0 0 0
CommandMod64=868 1 0 "" 5 0 0 0
CommandMod65=869 1 0 "" 5 0 0 0
CommandMod66=870 1 0 "" 5 0 0 0
CommandMod67=871 1 0 "" 5 0 0 0
CommandMod68=872 1 0 "" 5 0 0 0
CommandMod69=873 1 0 "" 5 0 0 0
CommandMod7=809 1 0 "" 5 0 0 0
CommandMod70=874 1 0 "" 5 0 0 0
CommandMod71=875 1 0 "" 5 0 0 0
CommandMod72=877 1 0 "" 5 0 0 0
CommandMod73=878 1 0 "" 5 0 0 0
CommandMod74=879 1 0 "" 5 0 0 0
CommandMod75=880 1 0 "" 5 0 0 0
CommandMod76=881 1 0 "" 5 0 0 0
CommandMod77=882 1 0 "" 5 0 0 0
CommandMod78=907 1 26 "" 5 16 0 16
CommandMod79=908 1 28 "" 5 17 0 17
CommandMod8=810 1 0 "" 5 0 0 0
CommandMod80=909 1 0 "" 5 0 0 0
CommandMod81=923 1 0 "" 5 0 0 0
CommandMod82=924 1 0 "" 5 0 0 0
CommandMod83=929 1 0 "" 5 0 0 0
CommandMod84=930 1 0 "" 5 0 0 0
CommandMod85=931 1 0 "" 5 0 0 0
CommandMod86=932 1 0 "" 5 0 0 0
CommandMod87=944 1 0 "" 5 0 0 0
CommandMod88=949 1 0 "" 5 8 0 8
CommandMod89=815 1 0 "" 5 0 0 0
CommandMod9=804 1 0 "" 5 0 0 0
CommandMod90=952 1 0 "" 5 0 0 0
CommandMod91=953 1 0 "" 5 0 0 0
CommandMod92=954 1 0 "" 5 0 0 0
CommandMod93=955 1 0 "" 5 0 0 0
CommandMod94=956 1 0 "" 5 0 0 0
CommandMod95=812 1 0 "" 5 0 0 0
CommandMod96=32769 1 0 "" 5 0 0 0
CommandMod97=32778 1 0 "" 5 0 0 0
CommandMod98=32780 1 0 "" 5 0 0 0
CommandMod99=32781 1 0 "" 5 0 0 0
[DVB configuration]
BDABandWidth=8
BDAIgnoreEncryptedChannels=0
BDANetworkProvider=@device:sw:{71985F4B-1CA1-11D3-9CC8-00C04F7971E0}\Microsoft Network Provider
BDAOffset=166
BDAReceiver=
BDAScanFreqEnd=858000
BDAScanFreqStart=474000
BDATuner=
BDAUseOffset=0
LastChannel=1
RebuildFilterGraph=1
StopFilterGraph=1
[DVBConfiguration]
BDABandWidth=8
BDAIgnoreEncryptedChannels=0
BDANetworkProvider=@device:sw:{71985F4B-1CA1-11D3-9CC8-00C04F7971E0}\Microsoft Network Provider
BDAOffset=166
BDAReceiver=
BDAScanFreqEnd=858000
BDAScanFreqStart=474000
BDATuner=
BDAUseOffset=0
LastChannel=1
RebuildFilterGraph=1
StopFilterGraph=1
[Favorites]
RelativeDrive=0
RememberPosition=1
[FileFormats]
3g2=3g2 3gp2 \0
3gp=3gp 3gpp 3ga \0
ac3dts=ac3 dts \0
aiff=aif aifc aiff \0
alac=alac \0
amr=amr \0
ape=ape apl \0
au=au snd \0
audiocd=cda \0
avi=avi \0
bdpls=mpls bdmv \0
bink=smk bik \0
dsm=dsm dsv dsa dss \0
dvdvideo=vob ifo \0
flac=flac \0
flic=fli flc flic \0
flv=flv f4v \0
ivf=ivf \0
m4a=m4a m4b m4r aac \0
midi=mid midi rmi \0
mka=mka \0
mkv=mkv \0
mov=mov \0
mp3=mp3 \0
mp4=mp4 m4v mp4v mpv4 hdmov \0
mpa=mpa mp2 m1a m2a \0
mpc=mpc \0
mpeg=mpg mpeg mpe m1v m2v mpv2 mp2v pva evo m2p \0
mpegts=ts tp trp m2t m2ts mts rec \0
ofr=ofr ofs \0
ogg=ogg oga \0
ogm=ogm ogv \0
opus=opus \0
other=divx rmvb amv \0
other_audio=aob mlp \0
pls=asx m3u m3u8 pls wvx wax wmx mpcpl \0
ra=ra \0
rar=rar \0
rm=rm ram rpm rmm \0
rt=rt rp smi smil \0
RtspFileExtFirst=1
RtspHandler=1
swf=swf \3
tak=tak \0
tta=tta \0
wav=wav \0
wavpack=wv \0
webm=webm \0
wma=wma \0
wmv=wmv wmp wm asf \0
[Internal Filters]
SRC_ASF=0
SRC_AVI=1
SRC_AVS=1
SRC_CDDA=1
SRC_CDXA=1
SRC_DSM=1
SRC_DTSAC3=1
SRC_FLAC=1
SRC_FLIC=1
SRC_FLV=1
SRC_HTTP=1
SRC_MATROSKA=1
SRC_MMS=1
SRC_MP4=1
SRC_MPA=1
SRC_MPEG=1
SRC_OGG=1
SRC_REALMEDIA=1
SRC_RFS=1
SRC_RTP=1
SRC_RTSP=1
SRC_SUBS=1
SRC_UDP=1
SRC_VTS=1
TRA_AAC=1
TRA_AC3=1
TRA_ALAC=1
TRA_ALS=1
TRA_AMR=1
TRA_AMVV=1
TRA_DIVX=1
TRA_DTS=1
TRA_FLAC=1
TRA_FLIC=1
TRA_FLV4=1
TRA_H263=1
TRA_H264=1
TRA_HEVC=1
TRA_INDEO=1
TRA_LPCM=1
TRA_MJPEG=1
TRA_MPA=1
TRA_MPEG1=1
TRA_MPEG2=1
TRA_MSMPEG4=1
TRA_NELLY=1
TRA_PCM=1
TRA_PS2AUD=1
TRA_RA=1
TRA_RV=1
TRA_SCREEN=1
TRA_SVQ3=1
TRA_THEORA=1
TRA_VC1=1
TRA_VORBIS=1
TRA_VP356=1
TRA_VP8=1
TRA_VP9=1
TRA_WMV=0
TRA_XVID=1
[Internal Filters\LAVAudio]
AudioDelay=0
AudioDelayEnabled=0
AutoAVSync=1
Bitstreaming_ac3=0
Bitstreaming_dts=0
Bitstreaming_dtshd=0
Bitstreaming_eac3=0
Bitstreaming_truehd=0
DRCEnabled=0
DRCLevel=100
DTSHDFraming=0
Expand61=0
ExpandMono=0
Mixing=0
MixingCenterLevel=7071
MixingFlags=4
MixingLayout=3
MixingLFELevel=0
MixingMode=0
MixingSurroundLevel=7071
OutputStandardLayout=1
SampleConvertDither=1
SampleFormat_fp32=1
SampleFormat_s16=1
SampleFormat_s24=1
SampleFormat_s32=1
SampleFormat_u8=1
TrayIcon=0
[Internal Filters\LAVSplitter]
ImpairedAudio=0
MatroskaExternalSegments=1
NetworkAnalysisDuration=1000
PGSForcedStream=1
PGSOnlyForced=0
prefAudioLangs=
PreferHighQualityAudio=1
prefSubLangs=
QueueMaxSize=256
StreamSwitchRemoveAudio=0
substreams=1
subtitleAdvanced=
subtitleMode=2
TrayIcon=0
vc1TimestampMode=2
[Internal Filters\LAVVideo]
DeintFieldOrder=0
DeintMode=0
DitherMode=1
NumThreads=0
RGBRange=2
StreamAR=2
SWDeintMode=0
SWDeintOutput=0
TrayIcon=0
[Internal Filters\LAVVideo\HWAccel]
dvd=1
h264=1
HWAccel=4
HWDeintHQ=1
HWDeintMode=0
HWDeintOutput=0
HWResFlags=3
mpeg2=1
mpeg4=0
vc1=1
[Internal Filters\LAVVideo\OutputFormat]
ayuv=0
nv12=1
p010=1
p016=1
p210=1
p216=1
rgb24=1
rgb32=1
rgb48=0
uyvy=1
v210=1
v410=1
y410=1
y416=1
yuy2=1
yv12=1
yv16=0
yv24=1
[Settings]
AllowMultipleInstances=1
AllowOverridingExternalSplitterSubtitleChoice=0
APSurfaceUsage=2
AspectRatioX=0
AspectRatioY=0
AssociatedWithIcon=1
AudioBoost=0
AudioLang=0
AudioMaxNormFactor=400
AudioNormalize=1
AudioNormalizeRecover=1
AudioRendererType=
AudiosLanguageOrder=
AudioTimeShift=0
AutoFitFactor=100
AutoloadAudio=1
AutoloadSubtitles=1
AutoZoom=1
Balance=0
BlockVSFilter=1
ClosedCaptions=0
ColumnDelta=0
CompMonDeskARDiff=0
ControlLimit=AAAAAAAAAAAAAAAE
ControlState=23
CustomChannelMapping=0
CycleDelta=BGCDFFADKCJKDFPD
D3D9RenderDevice=
D3DFullScreen=0
DefaultCapture=0
DefaultVideoFrame=4
DisableInternalSubtitles=0
DontUseSearchInFolder=0
DownSampleTo441=0
DSVidRen=11
DVDPath=
DX9Resizer=1
EnableAudioSwitcher=1
EnableAudioTimeShift=0
EnableEDLEditor=0
EnableSubtitles=0
EnableWebServer=0
EnableWorkerThreadForOpening=1
EVRBuffers=5
EVREnableFrameTimeCorrection=0
EVRForceInputHighColorRes=0
EVRHighColorRes=0
EVROutputRange=0
ExitAfterPlayBack=0
ExitFullscreenAtTheEnd=1
FastSeek=1
FastSeekMethod=1
FullScreenCtrls=1
FullScreenCtrlsTimeOut=0
FullScreenMonitor=
FullscreenRes
FullscreenResDelay=0
HideCaptionMenu=0
HideCDROMsSubMenu=1
HideFullscreenControls=1
HideFullscreenControlsDelay=0
HideFullscreenControlsPolicy=1
HideFullscreenDockedPanels=0
HideNavigation=0
HidePlaylistFullScreen=0
HideWindowedControls=0
HideWindowedMousePointer=1
IconLibVersion=3
InterfaceLanguage=0
IntRealMedia=0
ISDb=www.opensubtitles.org/isdb
JumpDistL=20000
JumpDistM=5000
JumpDistS=1000
KeepAspectRatio=1
KeepHistory=0
LastFullScreen=0
LastOpenDir=C:\
LastUsedPage=10024
LastWindowRect=IACAAAAAMMAAAAAAOEDAAAAAGBCAAAAA
LastWindowType=0
LaunchFullScreen=0
LcdSupport=0
LimitWindowProportions=0
LineDelta=0
LogoExt=0
LogoFile=
LogoID2=209
Loop=0
LoopNum=1
MenuLang=0
Mute=0
NotifySkype=0
OnTop=0
OSD_Font=Tahoma
OSD_Size=18
OSDFont=Tahoma
OSDSize=18
PreferForcedDefaultSubtitles=1
PreventMinimize=0
PrioritizeExternalSubtitles=1
Priority=32768
QTVidRen=0
RemainingTime=0
Remember DVD Pos=0
Remember File Pos=0
RememberDVDPos=0
RememberFilePos=0
RememberPlaylistItems=0
RememberWindowPos=0
RememberWindowSize=0
ReportFailedPins=1
ResetDevice=0
RestoreResAfterExit=1
Rewind=0
RMVidRen=0
SearchInDirAfterPlayBack=0
SettingsVersion=4
ShaderListScreenSpace=
Shaders List=
ShadersList=
Show OSD=1
ShowChapters=1
ShowOSD=1
ShufflePlaylistItems=0
SnapShotExt=.jpg
SnapShotPath=C:\Users\nano\Pictures
SnapToDesktopEdges=0
SPCAllowAnimationWhenBuffering=1
SPCMaxRes=0
SPCPow2Tex=1
SPCSize=10
SPDefaultStyle=20;20;20;20;2;0;2.000000;2.000000;3.000000;3.000000;0xffffff;0x00ffff;0x000000;0x000000;0x00;0x00;0x00;0x80;1;Arial;18.000000;100.000000;100.000000;0.000000;700;0;0;0;0;0.000000;0.000000;0.000000;0.000000;1
SpeakerChannels=2
SpeakerToChannelMapping
SpeedStep=0
SPHorPos=50
SPOverridePlacement=0
SPVerPos=90
SubDelayInterval=500
SubtitleARCompensation=1
SubtitlePaths=.;.\subtitles;.\subs
SubtitlesLang=0
SubtitlesLanguageOrder=
SynchronizeClock=0
SynchronizeDisplay=0
SynchronizeNearest=1
TargetSyncOffset=AAAAAAAAAAAAICAE
ThumbCols=4
ThumbRows=4
ThumbWidth=1024
TimeTooltipPosition=0
TitleBarTextStyle=1
TitleBarTextTitle=0
ToggleShader=0
ToggleShaderScreenSpace=0
TrayIcon=0
UICEAddr=127.0.0.1:1234
UpdaterAutoCheck=0
UpdaterDelay=7
UpdaterLastCheck=PJKGNEDFAAAAAAAA
UseDefaultsubtitlesStyle=0
UseDVDPath=0
UseGlobalMedia=0
UseSearchInFolder=1
UseTimeTooltip=1
UseUICE=0
UseWin7TaskBar=1
UseWinLirc=0
VideoBrightness=0
VideoContrast=0
VideoHue=0
VideoSaturation=0
VMR9MixerMode=1
VMRAlternateVSync=0
VMRColorManagementAmbientLight=0
VMRColorManagementEnable=0
VMRColorManagementInput=0
VMRColorManagementIntent=0
VMRDisableDesktopComposition=0
VMRFlushGPUAfterPresent=1
VMRFlushGPUBeforeVSync=1
VMRFlushGPUWait=0
VMRFullFloatingPointProcessing=0
VMRFullscreenGUISupport=0
VMRHalfFloatingPointProcessing=0
VMRMixerYUV=0
VMRVSync=0
VMRVSyncAccurate2=0
VMRVSyncOffset=0
Volume=55
VolumeStep=5
WebDefIndex=index.html;index.php
WebRoot=*./webroot
WebServerCGI=
WebServerLocalhostOnly=0
WebServerPort=13579
WebServerPrintDebugIfo=0
WebServerUseCompression=1
WinLircAddr=127.0.0.1:8765
Zoom=4
[Settings\FullscreenAutoChangeMode]
ApplyDefaultModeAtFSExit=0
Delay=0
Enable=0
RestoreResAfterExit=1
[Settings\FullscreenAutoChangeMode\Mode0]
BPP=32
Checked=1
Flags=0
FrameRateStart=0
FrameRateStop=0
Freq=60
SizeX=1366
SizeY=768
[Settings\FullscreenAutoChangeMode\Mode1]
BPP=32
Checked=1
Flags=0
FrameRateStart=23500000
FrameRateStop=23981000
Freq=60
SizeX=1366
SizeY=768
[Settings\FullscreenAutoChangeMode\Mode2]
BPP=32
Checked=1
Flags=0
FrameRateStart=23982000
FrameRateStop=24499000
Freq=60
SizeX=1366
SizeY=768
[Settings\FullscreenAutoChangeMode\Mode3]
BPP=32
Checked=1
Flags=0
FrameRateStart=24500000
FrameRateStop=25499000
Freq=60
SizeX=1366
SizeY=768
[Settings\FullscreenAutoChangeMode\Mode4]
BPP=32
Checked=1
Flags=0
FrameRateStart=29500000
FrameRateStop=29981000
Freq=60
SizeX=1366
SizeY=768
[Settings\FullscreenAutoChangeMode\Mode5]
BPP=32
Checked=1
Flags=0
FrameRateStart=29982000
FrameRateStop=30499000
Freq=60
SizeX=1366
SizeY=768
[Settings\FullscreenAutoChangeMode\Mode6]
BPP=32
Checked=1
Flags=0
FrameRateStart=49500000
FrameRateStop=50499000
Freq=60
SizeX=1366
SizeY=768
[Settings\FullscreenAutoChangeMode\Mode7]
BPP=32
Checked=1
Flags=0
FrameRateStart=59500000
FrameRateStop=59945000
Freq=60
SizeX=1366
SizeY=768
[Settings\FullscreenAutoChangeMode\Mode8]
BPP=32
Checked=1
Flags=0
FrameRateStart=59946000
FrameRateStop=60499000
Freq=60
SizeX=1366
SizeY=768
[Settings\PnSPresets]
Preset0=Scale to 16:9 TV,0.500,0.500,1.000,1.333
Preset1=Zoom To Widescreen,0.500,0.500,1.333,1.333
Preset2=Zoom To Ultra-Widescreen,0.500,0.500,1.763,1.763
[Shaders]
0=sharpen complex 2|ps_2_0|/* Sharpen complex v2 (requires ps >= 2) */\n\nsampler s0 : register(s0);\nfloat4 p0 :  register(c0);\nfloat4 p1 :  register(c1);\n\n#define width  (p0[0])\n#define height (p0[1])\n\n// pixel "width"\n#define px (p1[0])\n#define py (p1[1])\n\n/* Parameters */\n\n// for the blur filter\n#define mean 0.6\n#define dx (mean * px)\n#define dy (mean * py)\n\n#define CoefBlur 2\n#define CoefOrig (1 + CoefBlur)\n\n// for the sharpen filter\n#define SharpenEdge  0.2\n#define Sharpen_val0 2\n#define Sharpen_val1 ((Sharpen_val0 - 1) / 8.0)\n\nfloat4 main(float2 tex : TEXCOORD0) : COLOR {\n\t// get original pixel\n\tfloat4 orig = tex2D(s0, tex);\n\n\t// compute blurred image (gaussian filter)\n\tfloat4 c1 = tex2D(s0, tex + float2(-dx, -dy));\n\tfloat4 c2 = tex2D(s0, tex + float2(  0, -dy));\n\tfloat4 c3 = tex2D(s0, tex + float2( dx, -dy));\n\tfloat4 c4 = tex2D(s0, tex + float2(-dx,   0));\n\tfloat4 c5 = tex2D(s0, tex + float2( dx,   0));\n\tfloat4 c6 = tex2D(s0, tex + float2(-dx,  dy));\n\tfloat4 c7 = tex2D(s0, tex + float2(  0,  dy));\n\tfloat4 c8 = tex2D(s0, tex + float2( dx,  dy));\n\n\t// gaussian filter\n\t// [ 1, 2, 1 ]\n\t// [ 2, 4, 2 ]\n\t// [ 1, 2, 1 ]\n\t// to normalize the values, we need to divide by the coeff sum\n\t// 1 / (1+2+1+2+4+2+1+2+1) = 1 / 16 = 0.0625\n\tfloat4 flou = (c1 + c3 + c6 + c8 + 2 * (c2 + c4 + c5 + c7) + 4 * orig) * 0.0625;\n\n\t// substract blurred image from original image\n\tfloat4 corrected = CoefOrig * orig - CoefBlur * flou;\n\n\t// edge detection\n\t// Get neighbor points\n\t// [ c1,   c2, c3 ]\n\t// [ c4, orig, c5 ]\n\t// [ c6,   c7, c8 ]\n\tc1 = tex2D(s0, tex + float2(-px, -py));\n\tc2 = tex2D(s0, tex + float2(  0, -py));\n\tc3 = tex2D(s0, tex + float2( px, -py));\n\tc4 = tex2D(s0, tex + float2(-px,   0));\n\tc5 = tex2D(s0, tex + float2( px,   0));\n\tc6 = tex2D(s0, tex + float2(-px,  py));\n\tc7 = tex2D(s0, tex + float2(  0,  py));\n\tc8 = tex2D(s0, tex + float2( px,  py));\n\n\t// using Sobel filter\n\t// horizontal gradient\n\t// [ -1, 0, 1 ]\n\t// [ -2, 0, 2 ]\n\t// [ -1, 0, 1 ]\n\tfloat delta1 = (c3 + 2 * c5 + c8) - (c1 + 2 * c4 + c6);\n\n\t// Save some arithmetic operations to ensure PS2 compatibility\n\tc1 += c3;\n\tc6 += c8;\n\t// vertical gradient\n\t// [ -1, - 2, -1 ]\n\t// [  0,   0,  0 ]\n\t// [  1,   2,  1 ]\n\tfloat delta2 = (c6 + 2 * c7 /*+ c8*/) - (c1 + 2 * c2 /*+ c3*/);\n\n\t// computation\n\tif (sqrt(mul(delta1, delta1) + mul(delta2, delta2)) > SharpenEdge) {\n\t\t// if we have an edge, use sharpen\n\t\t//return  float4(1,0,0,0);\n\t\treturn orig * Sharpen_val0 - (c1 + c2 /*+ c3*/ + c4 + c5 + c6 + c7 /*+ c8*/) * Sharpen_val1;\n\t} else {\n\t\t// else return corrected image\n\t\treturn corrected;\n\t}\n}\n
1=16-235 -> 0-255  [SD][HD]|ps_2_0|sampler s0 : register(s0);\n\n#define const_1 ( 16.0 / 255.0)\n#define const_2 (255.0 / 219.0)\n\nfloat4 main(float2 tex : TEXCOORD0) : COLOR {\n\t// original pixel\n\tfloat4 c0 = tex2D(s0, tex);\n\n\treturn ((c0 - const_1) * const_2);\n}\n
10=denoise|ps_3_0|sampler s0 : register(s0);\nfloat4 p0 :  register(c0);\n\n#define width  (p0[0])\n#define height (p0[1])\n#define val0 (1.0)\n#define val1 (0.125)\n#define effect_width (0.1)\n\nfloat4 main(float2 tex : TEXCOORD0) : COLOR {\n\tfloat dx = 0.0f;\n\tfloat dy = 0.0f;\n\tfloat fTap = effect_width;\n\n\tfloat4 cAccum = tex2D(s0, tex) * val0;\n\n\tfor (int iDx = 0; iDx < 16; ++iDx) {\n\t\tdx = fTap / width;\n\t\tdy = fTap / height;\n\n\t\tcAccum += tex2D(s0, tex + float2(-dx, -dy)) * val1;\n\t\tcAccum += tex2D(s0, tex + float2(  0, -dy)) * val1;\n\t\tcAccum += tex2D(s0, tex + float2(-dx,   0)) * val1;\n\t\tcAccum += tex2D(s0, tex + float2( dx,   0)) * val1;\n\t\tcAccum += tex2D(s0, tex + float2(  0,  dy)) * val1;\n\t\tcAccum += tex2D(s0, tex + float2( dx,  dy)) * val1;\n\t\tcAccum += tex2D(s0, tex + float2(-dx, +dy)) * val1;\n\t\tcAccum += tex2D(s0, tex + float2(+dx, -dy)) * val1;\n\n\t\tfTap  += 0.1f;\n\t}\n\n\treturn (cAccum / 16.0f);\n}\n
11=procamp|ps_2_0|sampler s0 : register(s0);\nfloat4 p0 :  register(c0);\nfloat4 p1 :  register(c1);\n\n#define width   (p0[0])\n#define height  (p0[1])\n#define counter (p0[2])\n#define clock   (p0[3])\n#define one_over_width  (p1[0])\n#define one_over_height (p1[1])\n\n#define PI acos(-1)\n\nstatic float4x4 r2y = {\n\t 0.299,  0.587,  0.114, 0.000,\n\t-0.147, -0.289,  0.437, 0.000,\n\t 0.615, -0.515, -0.100, 0.000,\n\t 0.000,  0.000,  0.000, 0.000\n};\n\nstatic float4x4 y2r = {\n\t1.000,  0.000,  1.140, 0.000,\n\t1.000, -0.394, -0.581, 0.000,\n\t1.000,  2.028,  0.000, 0.000,\n\t0.000,  0.000,  0.000, 0.000\n};\n\n#define ymin ( 16.0 / 255)\n#define ymax (235.0 / 255)\n\n// Brightness: -1.0 to 1.0, default 0.0\n// Contrast: 0.0 to 10.0, default 1.0\n// Hue: -180.0 to +180.0, default 0.0\n// Saturation: 0.0 to 10.0, default 1.0\n\n#define Brightness 0.0\n#define Contrast   1.0\n#define Hue        0.0\n#define Saturation 1.0\n\n// tv -> pc scale\n// #define Brightness (-ymin)\n// #define Contrast   (1.0 / (ymax - ymin))\n\nstatic float2x2 HueMatrix = {\n\t cos(Hue * PI / 180), sin(Hue * PI / 180),\n\t-sin(Hue * PI / 180), cos(Hue * PI / 180)\n};\n\nfloat4 main(float2 tex : TEXCOORD0) : COLOR {\n\tfloat4 c0 = tex2D(s0, tex);\n\tc0 = mul(r2y, c0);\n\tc0.r = Contrast * (c0.r - ymin) + ymin + Brightness;\n\tc0.gb = mul(HueMatrix, c0.gb) * Saturation;\n\tc0 = mul(y2r, c0);\n\treturn c0;\n}\n
12=contour|ps_2_0|sampler s0 : register(s0);\nfloat4 p0 :  register(c0);\n\n#define width  (p0[0])\n#define height (p0[1])\n\nfloat4 main(float2 tex : TEXCOORD0) : COLOR {\n\tfloat dx = 4 / width;\n\tfloat dy = 4 / height;\n\n\tfloat4 c2 = tex2D(s0, tex + float2(  0, -dy));\n\tfloat4 c4 = tex2D(s0, tex + float2(-dx,   0));\n\tfloat4 c5 = tex2D(s0, tex + float2(  0,   0));\n\tfloat4 c6 = tex2D(s0, tex + float2( dx,   0));\n\tfloat4 c8 = tex2D(s0, tex + float2(  0,  dy));\n\n\tfloat4 c0 = (-c2 - c4 + c5 * 4 - c6 - c8);\n\tif (length(c0) < 1.0) {\n\t\tc0 = float4(0, 0, 0, 0);\n\t} else {\n\t\tc0 = float4(1, 1, 1, 0);\n\t}\n\n\treturn c0;\n}\n
13=letterbox|ps_2_0|sampler s0 : register(s0);\nfloat4 p0 :  register(c0);\n\n#define width  (p0[0])\n#define height (p0[1])\n\nfloat4 main(float2 tex : TEXCOORD0) : COLOR {\n\tfloat4 c0 = 0;\n\n\tfloat2 ar = float2(16, 9);\n\tfloat h = (1 - width / height * ar.y / ar.x) / 2;\n\n\tif (tex.y >= h && tex.y <= 1 - h) {\n\t\tc0 = tex2D(s0, tex);\n\t}\n\n\treturn c0;\n}\n
14=0-255 -> 16-235|ps_2_0|sampler s0 : register(s0);\n\n#define const_1 ( 16.0 / 255.0)\n#define const_2 (219.0 / 255.0)\n\nfloat4 main(float2 tex : TEXCOORD0) : COLOR {\n\t// original pixel\n\tfloat4 c0 = tex2D(s0, tex);\n\n\treturn (c0 * const_2) + const_1;\n}\n
15=nightvision|ps_2_0|sampler s0 : register(s0);\n\nfloat4 main(float2 tex : TEXCOORD0) : COLOR {\n\tfloat c = dot(tex2D(s0, tex), float4(0.2, 0.6, 0.1, 0.1));\n\treturn float4(0, c, 0, 0);\n}\n
16=wave|ps_2_0|sampler s0 : register(s0);\nfloat4 p0 :  register(c0);\n\n#define width  (p0[0])\n#define height (p0[1])\n#define clock  (p0[3])\n\nfloat4 main(float2 tex : TEXCOORD0) : COLOR {\n\tfloat4 c0 = 0;\n\n\ttex.x += sin(tex.x + clock / 0.3) / 20;\n\ttex.y += sin(tex.x + clock / 0.3) / 20;\n\n\tif (tex.x >= 0 && tex.x <= 1 && tex.y >= 0 && tex.y <= 1) {\n\t\tc0 = tex2D(s0, tex);\n\t}\n\n\treturn c0;\n}\n
17=sharpen|ps_2_0|sampler s0 : register(s0);\nfloat4 p0 :  register(c0);\nfloat4 p1 :  register(c1);\n\n#define width  (p0[0])\n#define height (p0[1])\n\n#define val0 (2.0)\n#define val1 (-0.125)\n#define effect_width (1.6)\n\nfloat4 main(float2 tex : TEXCOORD0) : COLOR {\n\tfloat dx = effect_width / width;\n\tfloat dy = effect_width / height;\n\n\tfloat4 c1 = tex2D(s0, tex + float2(-dx, -dy)) * val1;\n\tfloat4 c2 = tex2D(s0, tex + float2(  0, -dy)) * val1;\n\tfloat4 c3 = tex2D(s0, tex + float2(-dx,   0)) * val1;\n\tfloat4 c4 = tex2D(s0, tex + float2( dx,   0)) * val1;\n\tfloat4 c5 = tex2D(s0, tex + float2(  0,  dy)) * val1;\n\tfloat4 c6 = tex2D(s0, tex + float2( dx,  dy)) * val1;\n\tfloat4 c7 = tex2D(s0, tex + float2(-dx, +dy)) * val1;\n\tfloat4 c8 = tex2D(s0, tex + float2(+dx, -dy)) * val1;\n\tfloat4 c9 = tex2D(s0, tex) * val0;\n\n\tfloat4 c0 = (c1 + c2 + c3 + c4 + c5 + c6 + c7 + c8 + c9);\n\n\treturn c0;\n}\n
18=sphere|ps_2_0|sampler s0 : register(s0);\nfloat4 p0 :  register(c0);\n\n#define clock (p0[3])\n#define PI acos(-1)\n\nfloat4 main(float2 tex : TEXCOORD0) : COLOR {\n\t// - this is a very simple raytracer, one sphere only\n\t// - no reflection or refraction, yet (my ati 9800 has a 64 + 32 instruction limit...)\n\n\tfloat3 pl = float3(3, -3, -4); // light pos\n\tfloat4 cl = 0.4; // light color\n\n\tfloat3 pc = float3(0, 0, -1);  // cam pos\n\tfloat3 ps = float3(0, 0, 0.5); // sphere pos\n\tfloat r = 0.65; // sphere radius\n\n\tfloat3 pd = normalize(float3(tex.x - 0.5, tex.y - 0.5, 0) - pc);\n\n\tfloat A = 1;\n\tfloat B = 2 * dot(pd, pc - ps);\n\tfloat C = dot(pc - ps, pc - ps) - r * r;\n\tfloat D = B * B - 4 * A * C;\n\n\tfloat4 c0 = 0;\n\n\tif (D >= 0) {\n\t\t// t2 is the smaller, obviously...\n\t\t// float t1 = (-B + sqrt(D)) / (2 * A);\n\t\t// float t2 = (-B - sqrt(D)) / (2 * A);\n\t\t// float t = min(t1, t2);\n\n\t\tfloat t = (-B - sqrt(D)) / (2 * A);\n\n\t\t// intersection data\n\t\tfloat3 p = pc + pd * t;\n\t\tfloat3 n = normalize(p  - ps);\n\t\tfloat3 l = normalize(pl - p);\n\n\t\t// mapping the image onto the sphere\n\t\ttex = acos(-n) / PI;\n\n\t\t// rotate it\n\t\ttex.x = frac(tex.x + frac(clock / 10));\n\n\t\t// diffuse + specular\n\t\tc0 = tex2D(s0, tex) * dot(n, l) + cl * pow(max(dot(l, reflect(pd, n)), 0), 50);\n\t}\n\n\treturn c0;\n}\n
19=LCD angle correction|ps_2_0|// (C) 2011 Jan-Willem Krans (janwillem32 <at> hotmail.com) released under GPL v2; see COPYING.txt\n\n// Brightness, contrast and gamma controls for RGB, linearly scaled from top to bottom.\n// This shader can be run as a screen space pixel shader. It requires compiling with ps_2_0,\n// but higher is better see http://en.wikipedia.org/wiki/Pixel_shader to look up what PS version\n// your video card supports.\n// This shader is meant to work with linear RGB input and output. Regular R'G'B' with\n// a video gamma encoding will have to be converted with the linear gamma shaders to work properly.\n\n// Fractions, either decimal or not, are allowed\n// RedBrightness, GreenBrightness and BlueBrightness, interval [-10, 10], default 0\n#define RedBrightnessTop 0\n#define GreenBrightnessTop 0\n#define BlueBrightnessTop 0\n#define RedBrightnessBottom 0\n#define GreenBrightnessBottom 0\n#define BlueBrightnessBottom 0\n\n// RedContrast, GreenContrast and BlueContrast, interval [0, 10], default 1\n#define RedContrastTop 1\n#define GreenContrastTop 1\n#define BlueContrastTop 1\n#define RedContrastBottom 1\n#define GreenContrastBottom 1\n#define BlueContrastBottom 1\n\n// RedGamma, GreenGamma and BlueGamma, interval (0, 10], default 1\n#define RedGammaTop 0.8\n#define GreenGammaTop 0.8\n#define BlueGammaTop 0.8\n#define RedGammaBottom 1\n#define GreenGammaBottom 1\n#define BlueGammaBottom 1\n\nsampler s0;\n\nfloat4 main(float2 tex : TEXCOORD0) : COLOR {\n\tfloat3 s1 = tex2D(s0, tex).rgb;\n\t// original pixel\n\tfloat texyi = 1.0 - tex.y;\n\ts1 = s1 * (texyi * float3(RedContrastTop, GreenContrastTop, BlueContrastTop) + tex.y * float3(RedContrastBottom, GreenContrastBottom, BlueContrastBottom)) + texyi * float3(RedBrightnessTop, GreenBrightnessTop, BlueBrightnessTop) + tex.y * float3(RedBrightnessBottom, GreenBrightnessBottom, BlueBrightnessBottom);\n\t// process contrast and brightness on the original pixel\n\t// preserve the sign bits of RGB values\n\tfloat3 sb = sign(s1);\n\treturn (sb*pow(abs(s1), texyi * float3(RedGammaTop, GreenGammaTop, BlueGammaTop) + tex.y * float3(RedGammaBottom, GreenGammaBottom, BlueGammaBottom))).rgbb;\n\t// process gamma correction and output\n}
2=sharpen complex|ps_2_0|sampler s0 : register(s0);\nfloat4 p1 :  register(c1);\n\n#define dx (p1[0])\n#define dy (p1[1])\n\nfloat4 main(float2 tex : TEXCOORD0) : COLOR {\n\t// Pixels definition: original, blurred, corrected, final\n\tfloat4 orig;\n\tfloat4 blurred;\n\tfloat4 corrected;\n\tfloat4 final;\n\n\t// Get neighbor points\n\t// [ 1,    2, 3 ]\n\t// [ 4, orig, 5 ]\n\t// [ 6,    7, 8 ]\n\n\torig = tex2D(s0, tex);\n\tfloat4 c1 = tex2D(s0, tex + float2(-dx, -dy));\n\tfloat4 c2 = tex2D(s0, tex + float2(  0, -dy));\n\tfloat4 c3 = tex2D(s0, tex + float2( dx, -dy));\n\tfloat4 c4 = tex2D(s0, tex + float2(-dx,   0));\n\tfloat4 c5 = tex2D(s0, tex + float2( dx,   0));\n\tfloat4 c6 = tex2D(s0, tex + float2(-dx,  dy));\n\tfloat4 c7 = tex2D(s0, tex + float2(  0,  dy));\n\tfloat4 c8 = tex2D(s0, tex + float2( dx,  dy));\n\n\t// Computation of the blurred image (gaussian filter)\n\t// to normalize the values, we need to divide by the coeff sum\n\t// 1/(1+2+1+2+4+2+1+2+1) = 1/16 = 0.0625\n\tblurred = (c1 + c3 + c6 + c8 + 2 * (c2 + c4 + c5 + c7) + 4 * orig) * 0.0625;\n\n\t// substract blurred image from original image\n\tcorrected = 2 * orig - blurred;\n\n\t// edge detection\n\tfloat delta1;\n\tfloat delta2;\n\tfloat value;\n\n\t// using Sobel filter\n\t// horizontal gradient\n\t// [ -1, 0, 1 ]\n\t// [ -2, 0, 2 ]\n\t// [ -1, 0, 1 ]\n\tdelta1 = (c3 + 2 * c5 + c8) - (c1 + 2 * c4 + c6);\n\n\t// vertical gradient\n\t// [ -1, -2, -1 ]\n\t// [  0,  0,  0 ]\n\t// [  1,  2,  1 ]\n\tdelta2 = (c6 + 2 * c7 + c8) - (c1 + 2 * c2 + c3);\n\n\t// computation\n\tvalue = sqrt(mul(delta1, delta1) + mul(delta2, delta2));\n\n\tif (value > 0.3) {\n\t\t// if we have an edge, use sharpen\n\t\t#define Sharpen_val0 2.0\n\t\t#define Sharpen_val1 0.125\n\t\tfinal = orig * 2 - (c1 + c2 + c3 + c4 + c5 + c6 + c7 + c8) * 0.125;\n\t\t//final = float4(1, 0, 0, 0);\n\t\treturn final;\n\t}\n\n\t// else return corrected image\n\treturn corrected;\n}\n
20=edge sharpen|ps_2_0|sampler s0 : register(s0);\nfloat4 p0 :  register(c0);\n\n#define width  (p0[0])\n#define height (p0[1])\n\n#define NbPixel     1\n#define Edge_threshold  0.2\n#define Sharpen_val0    2.0\n#define Sharpen_val1    0.125\n\nfloat4 main(float2 tex : TEXCOORD0) : COLOR {\n\t// size of NbPixel pixels\n\tfloat dx = NbPixel / width;\n\tfloat dy = NbPixel / height;\n\tfloat4 Res = 0;\n\n\t// Edge detection using Prewitt operator\n\t// Get neighbor points\n\t// [ 1, 2, 3 ]\n\t// [ 4, 0, 5 ]\n\t// [ 6, 7, 8 ]\n\tfloat4 c0 = tex2D(s0, tex);\n\tfloat4 c1 = tex2D(s0, tex + float2(-dx, -dy));\n\tfloat4 c2 = tex2D(s0, tex + float2(  0, -dy));\n\tfloat4 c3 = tex2D(s0, tex + float2( dx, -dy));\n\tfloat4 c4 = tex2D(s0, tex + float2(-dx,   0));\n\tfloat4 c5 = tex2D(s0, tex + float2( dx,   0));\n\tfloat4 c6 = tex2D(s0, tex + float2(-dx,  dy));\n\tfloat4 c7 = tex2D(s0, tex + float2(  0,  dy));\n\tfloat4 c8 = tex2D(s0, tex + float2( dx,  dy));\n\n\t// Computation of the 3 derived vectors (hor, vert, diag1, diag2)\n\tfloat4 delta1 = (c6 + c4 + c1 - c3 - c5 - c8);\n\tfloat4 delta2 = (c4 + c1 + c2 - c5 - c8 - c7);\n\tfloat4 delta3 = (c1 + c2 + c3 - c8 - c7 - c6);\n\tfloat4 delta4 = (c2 + c3 + c5 - c7 - c6 - c4);\n\n\t// Computation of the Prewitt operator\n\tfloat value = length(abs(delta1) + abs(delta2) + abs(delta3) + abs(delta4)) / 6;\n\n\t// If we have an edge (vector length > Edge_threshold) => apply sharpen filter\n\tif (value > Edge_threshold) {\n\t\tRes = c0 * Sharpen_val0 - (c1 + c2 + c3 + c4 + c5 + c6 + c7 + c8) * Sharpen_val1;\n\t\t// Display edges in red...\n\t\t//Res = float4( 1.0, 0.0, 0.0, 0.0 );\n\n\t\treturn Res;\n\t} else {\n\t\treturn c0;\n\t}\n}\n
21=grayscale|ps_2_0|sampler s0 : register(s0);\n\nfloat4 main(float2 tex : TEXCOORD0) : COLOR {\n\tfloat c0 = dot(tex2D(s0, tex), float4(0.299, 0.587, 0.114, 0));\n\n\treturn c0;\n}\n
3=YV12 Chroma Upsampling|ps_2_0|/*\nYV12 chroma upsampling fixer\nby Kurt Bernhard 'Leak' Pruenner\n\nUse with YV12 output if the half-resolution chroma\ngets upsampled in hardware by doubling the values\ninstead of interpolating between them.\n\n(i.e. if you're getting blocky red edges on dark\nbackgrounds...)\n*/\n\nsampler s0 : register(s0);\nfloat4 p0 :  register(c0);\nfloat4 p1 :  register(c1);\n\n#define width  (p0[0])\n#define height (p0[1])\n\nfloat4 getPixel(float2 tex, float dx, float dy)\n{\n\ttex.x += dx;\n\ttex.y += dy;\n\n\treturn tex2D(s0, tex);\n}\n\nfloat4 rgb2yuv(float4 rgb)\n{\n\tfloat4x4 coeffs = {\n\t\t 0.299,  0.587,  0.114, 0.000,\n\t\t-0.147, -0.289,  0.436, 0.000,\n\t\t 0.615, -0.515, -0.100, 0.000,\n\t\t 0.000,  0.000,  0.000, 0.000\n\t};\n\n\treturn mul(coeffs, rgb);\n}\n\nfloat4 yuv2rgb(float4 yuv)\n{\n\tfloat4x4 coeffs = {\n\t\t1.000,  0.000,  1.140, 0.000,\n\t\t1.000, -0.395, -0.581, 0.000,\n\t\t1.000,  2.032,  0.000, 0.000,\n\t\t0.000,  0.000,  0.000, 0.000\n\t};\n\n\treturn mul(coeffs, yuv);\n}\n\nfloat4 main(float2 tex : TEXCOORD0) : COLOR {\n\tfloat dx = 1 / width;\n\tfloat dy = 1 / height;\n\n\tfloat4 yuv00 = rgb2yuv(getPixel(tex, -dx, -dy));\n\tfloat4 yuv01 = rgb2yuv(getPixel(tex, -dx,   0));\n\tfloat4 yuv02 = rgb2yuv(getPixel(tex, -dx,  dy));\n\tfloat4 yuv10 = rgb2yuv(getPixel(tex,   0, -dy));\n\tfloat4 yuv11 = rgb2yuv(getPixel(tex,   0,   0));\n\tfloat4 yuv12 = rgb2yuv(getPixel(tex,   0,  dy));\n\tfloat4 yuv20 = rgb2yuv(getPixel(tex,  dx, -dy));\n\tfloat4 yuv21 = rgb2yuv(getPixel(tex,  dx,   0));\n\tfloat4 yuv22 = rgb2yuv(getPixel(tex,  dx,  dy));\n\n\tfloat4 yuv =\n\t\t(yuv00 * 1 + yuv01 * 2 + yuv02 * 1 +\n\t\t yuv10 * 2 + yuv11 * 4 + yuv12 * 2 +\n\t\t yuv20 * 1 + yuv21 * 2 + yuv22 * 1) / 16;\n\n\tyuv.r = yuv11.r;\n\n\treturn yuv2rgb(yuv);\n}\n
4=16-235 -> 0-255  [SD]|ps_2_0|sampler s0 : register(s0);\nfloat4 p0 :  register(c0);\n\n#define width  (p0[0])\n#define height (p0[1])\n\n#define const_1 ( 16.0 / 255.0)\n#define const_2 (255.0 / 219.0)\n\nfloat4 main(float2 tex : TEXCOORD0) : COLOR {\n\t// original pixel\n\tfloat4 c0 = tex2D(s0, tex);\n\n\t// ATI driver only looks at the height\n\tif (height >= 720) {\n\t\treturn c0;\n\t} else {\n\t\treturn ((c0 - const_1) * const_2);\n\t}\n}\n
5=emboss|ps_2_0|sampler s0 : register(s0);\nfloat4 p0 :  register(c0);\n\n#define width  (p0[0])\n#define height (p0[1])\n\nfloat4 main(float2 tex : TEXCOORD0) : COLOR {\n\tfloat dx = 1 / width;\n\tfloat dy = 1 / height;\n\n\tfloat4 c1 = tex2D(s0, tex + float2(-dx, -dy));\n\tfloat4 c2 = tex2D(s0, tex + float2(  0, -dy));\n\tfloat4 c4 = tex2D(s0, tex + float2(-dx,   0));\n\tfloat4 c6 = tex2D(s0, tex + float2( dx,   0));\n\tfloat4 c8 = tex2D(s0, tex + float2(  0,  dy));\n\tfloat4 c9 = tex2D(s0, tex + float2( dx,  dy));\n\n\tfloat4 c0 = (-c1 - c2 - c4 + c6 + c8 + c9);\n\tc0 = (c0.r + c0.g + c0.b) / 3 + 0.5;\n\n\treturn c0;\n}\n
6=spotlight|ps_2_0|sampler s0 : register(s0);\nfloat4 p0 :  register(c0);\n\n#define width  (p0[0])\n#define height (p0[1])\n#define clock  (p0[3])\n\n#define PI acos(-1)\n\nfloat4 main(float2 tex : TEXCOORD0) : COLOR {\n\tfloat4 c0 = tex2D(s0, tex);\n\tfloat3 lightsrc = float3(sin(clock * PI / 1.5) / 2 + 0.5, cos(clock * PI) / 2 + 0.5, 1);\n\tfloat3 light = normalize(lightsrc - float3(tex.x, tex.y, 0));\n\tc0 *= pow(dot(light, float3(0, 0, 1)), 50);\n\n\treturn c0;\n}\n
7=BT.601 -> BT.709|ps_2_0|// (C) 2011 Jan-Willem Krans (janwillem32 <at> hotmail.com) released under GPL v2; see COPYING.txt\n\n// Correct video colorspace BT.601 [SD] to BT.709 [HD] for HD video input\n// Use this shader only if BT.709 [HD] encoded video is incorrectly matrixed to full range RGB with the BT.601 [SD] colorspace.\n\nsampler s0;\nfloat2  c0;\n\nfloat4 main(float2 tex : TEXCOORD0) : COLOR {\n\tfloat4 si = tex2D(s0, tex); // original pixel\n\tif (c0.x < 1120 && c0.y < 630) {\n\t\treturn si; // this shader does not alter SD video\n\t}\n\tfloat3 s1 = si.rgb;\n\ts1 = s1.rrr * float3(0.299, -0.1495 / 0.886, 0.5) + s1.ggg * float3(0.587, -0.2935 / 0.886, -0.2935 / 0.701) + s1.bbb * float3(0.114, 0.5, -0.057 / 0.701); // RGB to Y'CbCr, BT.601 [SD] colorspace\n\treturn (s1.rrr + float3(0, -0.1674679 / 0.894, 1.8556) * s1.ggg + float3(1.5748, -0.4185031 / 0.894, 0) * s1.bbb).rgbb; // Y'CbCr to RGB output, BT.709 [HD] colorspace\n}
8=deinterlace (blend)|ps_2_0|sampler s0 : register(s0);\nfloat4 p0 :  register(c0);\n\n#define width  (p0[0])\n#define height (p0[1])\n\nfloat4 main(float2 tex : TEXCOORD0) : COLOR {\n\tfloat4 c0 = tex2D(s0, tex);\n\n\tfloat2 h = float2(0, 1 / height);\n\tfloat4 c1 = tex2D(s0, tex - h);\n\tfloat4 c2 = tex2D(s0, tex + h);\n\tc0 = (c0 * 2 + c1 + c2) / 4;\n\n\treturn c0;\n}\n
9=invert|ps_2_0|sampler s0 : register(s0);\n\nfloat4 main(float2 tex : TEXCOORD0) : COLOR {\n\tfloat4 c0 = float4(1, 1, 1, 1) - tex2D(s0, tex);\n\n\treturn c0;\n}\n
Extra=
Initialized=1
LastPreset=
PostResize=
PreResize=
[ToolBars\Capture Settings]
DockState=59420
[ToolBars\Capture Settings\State-SCBar-825]
sizeFloatCX=198
sizeFloatCY=476
sizeHorzCX=198
sizeHorzCY=476
sizeVertCX=198
sizeVertCY=476
[ToolBars\Edit List Editor]
DockState=59421
[ToolBars\Edit List Editor\State-SCBar-846]
sizeFloatCX=200
sizeFloatCY=100
sizeHorzCX=200
sizeHorzCY=100
sizeVertCX=200
sizeVertCY=100
[ToolBars\Navigation Bar]
DockState=59420
[ToolBars\Navigation Bar\State-SCBar-33415]
sizeFloatCX=140
sizeFloatCY=244
sizeHorzCX=140
sizeHorzCY=244
sizeVertCX=140
sizeVertCY=244
[ToolBars\Playlist]
DockState=59422
Visible=0
[ToolBars\Playlist\State-SCBar-824]
sizeFloatCX=200
sizeFloatCY=100
sizeHorzCX=1085
sizeHorzCY=100
sizeVertCX=200
sizeVertCY=100
[ToolBars\Shader Editor]
DockState=59419
[ToolBars\Shader Editor\State-SCBar-826]
sizeFloatCX=308
sizeFloatCY=115
sizeHorzCX=308
sizeHorzCY=115
sizeVertCX=308
sizeVertCY=115
[ToolBars\Subresync]
DockState=59419
[ToolBars\Subresync\State-SCBar-823]
sizeFloatCX=200
sizeFloatCY=200
sizeHorzCX=200
sizeHorzCY=200
sizeVertCX=200
sizeVertCY=200
